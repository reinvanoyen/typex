{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/html-fontbook-export.js","webpack://exports/./src/util/export.js","webpack://exports/./src/util/number.js","webpack://exports/./src/util/sketch.js","webpack://exports/./src/util/ui.js","webpack://exports/./src/util/util.js"],"names":["context","ui","createSettingsDialog","title","informativeText","confirmBtnText","type","id","options","label","value","data","textStyles","getTextStyles","sortTextStyles","html","createHtmlFontbook","createSavePanel","exportUtils","sort","a","b","fontSize","createCssProps","textStyle","opts","cssUnit","scalingFactor","maxDecimalPlaces","cssProps","fontFamily","fontParts","split","fontWeightMap","parseFloatMaxDecimal","letterSpacing","textTransform","lineHeight","createStyleBlock","output","prop","createInlineStyleString","styleString","exportedTextStyles","forEach","i","textStyleId","createTextStyleId","textStyleName","textStyleNamingPrefix","textStyleNamingConvention","name","inlineStyleString","previewText","number","Number","toFixed","replace","sketch","texts","document","documentData","layerTextStyles","objects","rawTextStyles","text","push","attributes","style","rawTextStyle","String","NSFont","fontDescriptor","objectForKey","NSFontNameAttribute","NSFontSizeAttribute","paragraph","NSParagraphStyle","maximumLineHeight","NSKern","parseInt","MSAttributedStringTextTransformAttribute","defaultFileName","contents","save","NSSavePanel","savePanel","setNameFieldStringValue","setAllowsOtherFileTypes","setExtensionHidden","runModal","file","NSString","stringWithString","path","URL","writeToFile_atomically_encoding_error","NSUTF8StringEncoding","createLabel","NSTextField","alloc","init","setStringValue","setFont","boldSystemFontOfSize","setBezeled","setDrawsBackground","setEditable","setSelectable","createTextField","field","createSelect","comboBox","NSComboBox","addItemsWithObjectValues","selectItemAtIndex","setNumberOfVisibleItems","setCompletes","components","cb","cancelBtnText","dialog","NSAlert","dialogIconPath","plugin","urlForResourceNamed","dialogIcon","NSImage","initByReferencingFile","setIcon","setMessageText","setInformativeText","btnConfirm","addButtonWithTitle","btnCancel","gridView","NSGridView","inputs","height","c","addRowWithViews","accessoryView","columnSpacing","frame","NSMakeRect","responseCode","stringValue","indexOfSelectedItem","util"],"mappings":"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","file":"html-fontbook-export.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/html-fontbook-export.js\");\n","import ui from './util/ui';\nimport exportUtils from './util/export';\nimport sketchUtils from './util/sketch';\n\nexport default function(context) {\n\n\n  ui.createSettingsDialog(context, {\n    title: 'Create HTML fontbook',\n    informativeText: 'Create a handy HTML fontbook from your text styles',\n    confirmBtnText: 'Export HTML fontbook'\n  }, [\n    {\n      type: 'select',\n      id: 'cssUnit',\n      options: ['px', 'em', 'rem'],\n      label: 'Css unit'\n    },\n    {\n      type: 'text',\n      id: 'scalingFactor',\n      value: 1,\n      label: 'Size scaling factor'\n    },\n    {\n      type: 'text',\n      id: 'maxDecimalPlaces',\n      value: 2,\n      label: 'Maximal decimal places'\n    },\n    {\n      type: 'text',\n      id: 'textStyleNamingPrefix',\n      value: 'type',\n      label: 'Text style naming prefix'\n    },\n    {\n      type: 'select',\n      id: 'textStyleNamingConvention',\n      options: ['Numeric', 'Text style name'],\n      label: 'Text style naming convention'\n    },\n    {\n      type: 'text',\n      id: 'previewText',\n      value: 'The quick brown fox jumps over the lazy dog',\n      label: 'Preview text'\n    }\n  ], (data) => {\n\n    // Get the text styles from the Sketch document\n    let textStyles = sketchUtils.getTextStyles(context);\n    textStyles = exportUtils.sortTextStyles(textStyles);\n\n    // Create a HTML fontbook with these styles\n    let html = exportUtils.createHtmlFontbook(textStyles, data);\n\n    // Ask the user to save the file\n    ui.createSavePanel('typex-fontbook.html', html);\n  });\n};","\"use strict\";\n\nimport util from './util';\nimport numberUtils from './number';\n\nconst exportUtils = {\n  sortTextStyles(textStyles) {\n\n    // Sort text styles by size\n    textStyles.sort((a, b) => {\n      return a.fontSize - b.fontSize;\n    });\n\n    return textStyles;\n  },\n  createCssProps(textStyle, opts = {}) {\n\n    opts.cssUnit = opts.cssUnit || 'px';\n    opts.scalingFactor = opts.scalingFactor || 1;\n    opts.maxDecimalPlaces = opts.maxDecimalPlaces || 2;\n\n    let cssProps = {};\n\n    cssProps['font-family'] = textStyle.fontFamily;\n    cssProps['font-weight'] = 400;\n    cssProps['line-height'] = 1;\n    cssProps['text-transform'] = 'none';\n\n    let fontParts = textStyle.fontFamily.split('-');\n\n    let fontWeightMap = {\n      'Thin': 100,\n      'Light': 300,\n      'Regular': 400,\n      'Medium': 500,\n      'Bold': 700,\n      'Black': 900\n    };\n\n    if (fontParts[1] && fontWeightMap[fontParts[1]]) {\n      cssProps['font-family'] = fontParts[0];\n      cssProps['font-weight'] = fontWeightMap[fontParts[1]];\n    }\n\n    cssProps['font-size'] = numberUtils.parseFloatMaxDecimal(opts.scalingFactor * textStyle.fontSize, opts.maxDecimalPlaces)+opts.cssUnit;\n    cssProps['letter-spacing'] = numberUtils.parseFloatMaxDecimal(opts.scalingFactor * textStyle.letterSpacing, opts.maxDecimalPlaces)+opts.cssUnit;\n\n    if (textStyle.textTransform === 1) {\n      cssProps['text-transform'] = 'uppercase';\n    }\n\n    if (textStyle.textTransform === 2) {\n      cssProps['text-transform'] = 'lowercase';\n    }\n\n    if (textStyle.lineHeight) {\n      cssProps['line-height'] = numberUtils.parseFloatMaxDecimal(1 + (textStyle.lineHeight - textStyle.fontSize) / textStyle.lineHeight, opts.maxDecimalPlaces);\n    }\n\n    return cssProps;\n  },\n  createStyleBlock(cssProps) {\n\n    let output = '';\n\n    for (let prop in cssProps) {\n      output += \"\\t\"+prop+': '+cssProps[prop]+';'+\"\\n\";\n    }\n\n    return output;\n  },\n  createInlineStyleString(cssProps) {\n\n    let styleString = '';\n\n    for (let prop in cssProps) {\n      styleString += prop + ': ' + cssProps[prop] +'; ';\n    }\n\n    return styleString;\n  },\n  createHtmlFontbook(textStyles, opts = {}) {\n\n    let exportedTextStyles = {};\n\n    let output = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Typex text styles</title>\n      </head>\n      <body style=\"padding: 0; margin: 0;\">\n    `;\n\n    textStyles.forEach((textStyle, i) => {\n\n      let textStyleId = util.createTextStyleId(textStyle);\n      let textStyleName = opts.textStyleNamingPrefix + ' ' + (opts.textStyleNamingConvention === 'Numeric' ? i+1 : textStyle.name);\n\n      if (! exportedTextStyles[textStyleId]) {\n\n        let cssProps = exportUtils.createCssProps(textStyle, opts);\n        let inlineStyleString = exportUtils.createInlineStyleString(cssProps);\n\n        output += `\n          <div style=\"box-shadow: 0 5px 15px #f0f0f0; padding: 25px 50px; border-bottom: 1px solid #ccc;\">\n            <div style=\"font-family: Helvetica, Arial, Sans-Serif; font-size: 14px; margin-bottom: 15px;\">\n              <span>${i+1}.</span>\n              <span>\n                ${textStyleName}\n              </span>\n              <span style=\"color: #ccc;\">\n                ${inlineStyleString}\n              </span>\n            </div>\n            <div style=\"${inlineStyleString};\">${opts.previewText}</div>\n          </div>\n        `;\n\n        // Add the id to the stack of text styles we've already exported\n        exportedTextStyles[textStyleId] = true;\n      }\n    });\n\n    output += `\n      </body>\n      </html>\n    `;\n\n    return output;\n  }\n};\n\nexport default exportUtils;","\"use strict\";\n\nconst number = {\n  parseFloatMaxDecimal(number, maxDecimalPlaces) {\n    return Number(number.toFixed(maxDecimalPlaces).replace(/[.,]00$/, ''));\n  }\n};\n\nexport default number;","\"use strict\";\n\nconst sketch = {\n  getTextStyles(context) {\n\n    let texts = context.document.documentData().layerTextStyles().objects();\n    let rawTextStyles = [];\n\n    texts.forEach((text, i) => {\n\n      rawTextStyles.push({\n        attributes: text.style().textStyle().attributes(),\n        textStyle: text,\n        name: text.name()\n      });\n    });\n\n    let textStyles = [];\n\n    rawTextStyles.forEach(rawTextStyle => {\n\n      let textStyle = {};\n\n      textStyle.name = rawTextStyle.name;\n      textStyle.fontFamily = String(rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontNameAttribute));\n      textStyle.fontSize = rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute);\n      textStyle.paragraph = rawTextStyle.attributes.NSParagraphStyle;\n\n      if (textStyle.paragraph) {\n        textStyle.lineHeight = textStyle.paragraph.maximumLineHeight();\n      }\n\n      textStyle.letterSpacing = rawTextStyle.attributes.NSKern || 0;\n      textStyle.textTransform = parseInt(rawTextStyle.attributes.MSAttributedStringTextTransformAttribute || 0);\n\n      // @TODO strikethrough & underline, or is this not needed?\n\n      textStyles.push(textStyle);\n    });\n\n    return textStyles;\n  }\n};\n\nexport default sketch;","\"use strict\";\n\nconst ui = {\n  createSavePanel(defaultFileName, contents) {\n\n    let save = NSSavePanel.savePanel();\n\n    save.setNameFieldStringValue(defaultFileName);\n    save.setAllowsOtherFileTypes(false);\n    save.setExtensionHidden(false);\n\n    if (save.runModal()) {\n\n      let file = NSString.stringWithString(contents);\n      let path = save.URL().path();\n\n      file.writeToFile_atomically_encoding_error(path, true, NSUTF8StringEncoding, null);\n    }\n  },\n  createLabel: (text) => {\n\n    let label = NSTextField.alloc().init();\n\n    label.setStringValue(text);\n    label.setFont(NSFont.boldSystemFontOfSize(12));\n    label.setBezeled(false);\n    label.setDrawsBackground(false);\n    label.setEditable(false);\n    label.setSelectable(false);\n\n    return label;\n  },\n  createTextField(value) {\n\n    let field = NSTextField.alloc().init();\n\n    field.setStringValue(value);\n\n    return field;\n  },\n  createSelect: (options) => {\n\n    let comboBox = NSComboBox.alloc().init();\n\n    comboBox.addItemsWithObjectValues(options);\n    comboBox.selectItemAtIndex(0);\n    comboBox.setNumberOfVisibleItems(16);\n    comboBox.setCompletes(1);\n\n    return comboBox;\n  },\n  createSettingsDialog(context, opts = {}, components, cb) {\n\n    opts.title = opts.title || 'Alert';\n    opts.informativeText = opts.informativeText || '';\n    opts.cancelBtnText = opts.cancelBtnText || 'Cancel';\n    opts.confirmBtnText = opts.confirmBtnText || 'Ok';\n\n    let dialog = NSAlert.alloc().init();\n    let dialogIconPath = context.plugin.urlForResourceNamed('icon.png').path();\n    let dialogIcon = NSImage.alloc().initByReferencingFile(dialogIconPath);\n    dialog.setIcon(dialogIcon);\n    dialog.setMessageText(opts.title);\n    dialog.setInformativeText(opts.informativeText);\n\n    let btnConfirm = dialog.addButtonWithTitle(opts.confirmBtnText);\n    let btnCancel = dialog.addButtonWithTitle(opts.cancelBtnText);\n\n    // Create grid view\n    let gridView = NSGridView.alloc().init();\n\n    // Create object to hold all inputs\n    let inputs = {};\n    let height = 0;\n\n    // Loop each component\n    components.forEach(c => {\n\n      let label, field;\n\n      switch (c.type) {\n\n        case 'text':\n\n          label = ui.createLabel(c.label);\n          field = ui.createTextField(c.value);\n          height += 22;\n\n          break;\n\n        case 'select':\n\n          label = ui.createLabel(c.label);\n          field = ui.createSelect(c.options);\n          height += 28;\n\n          break;\n      }\n\n      inputs[c.id] = field;\n      gridView.addRowWithViews([label, field]);\n    });\n\n    // Set grid view as view of dialog\n    dialog.accessoryView = gridView;\n\n    gridView.columnSpacing = 30;\n    gridView.frame = NSMakeRect(0, 0, 400, height);\n\n    // Open the dialog and store the response code\n    let responseCode = dialog.runModal();\n\n    // The dialog is being 'submitted'\n    if (responseCode === 1000) {\n\n      let data = {};\n\n      components.forEach(c => {\n\n        switch (c.type) {\n          case 'text':\n            data[c.id] = inputs[c.id].stringValue();\n            break;\n          case 'select':\n            data[c.id] = c.options[inputs[c.id].indexOfSelectedItem()];\n        }\n      });\n\n      cb(data);\n    }\n\n    return dialog;\n  }\n};\n\nexport default ui;","\"use strict\";\n\nconst util = {\n  createTextStyleId(textStyle) {\n\n    let textStyleId = '';\n\n    // Make sure this id incorporates every possible property of the text style\n    textStyleId += textStyle.fontFamily;\n    textStyleId += '-'+textStyle.fontSize;\n    textStyleId += '-'+textStyle.lineHeight;\n    textStyleId += '-'+textStyle.letterSpacing;\n    textStyleId += '-'+textStyle.textTransform;\n\n    return textStyleId;\n  }\n};\n\nexport default util;"],"sourceRoot":""}