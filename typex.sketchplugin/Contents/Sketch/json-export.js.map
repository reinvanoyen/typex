{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/json-export.js","webpack://exports/./src/ui.js","webpack://exports/./src/util/export.js","webpack://exports/./src/util/number.js","webpack://exports/./src/util/sketch.js","webpack://exports/./src/util/ui.js","webpack://exports/./src/util/util.js"],"names":["context","textStyles","getTextStyles","css","forEach","textStyle","push","createCssProps","uiUtils","createSavePanel","JSON","stringify","MARGIN","LABEL_WIDTH","LABEL_HEIGHT","FIELD_WIDTH","FIELD_HEIGHT","SELECT_HEIGHT","SELECT_WIDTH","currentOffset","ui","createLabel","view","text","frame","NSMakeRect","label","NSTextField","alloc","initWithFrame","setStringValue","setFont","NSFont","boldSystemFontOfSize","setBezeled","setDrawsBackground","setEditable","setSelectable","addSubview","createField","value","width","height","field","createSelect","options","comboBox","NSComboBox","addItemsWithObjectValues","selectItemAtIndex","setNumberOfVisibleItems","setCompletes","getCurrentOffset","exportUtils","sortTextStyles","sort","a","b","fontSize","opts","cssUnit","scalingFactor","maxDecimalPlaces","cssProps","fontFamily","fontParts","split","fontWeightMap","parseFloatMaxDecimal","letterSpacing","textTransform","lineHeight","createInlineStyleString","styleString","prop","createHtmlFontbook","exportedTextStyles","output","i","textStyleId","createTextStyleId","inlineStyleString","name","previewText","number","Number","toFixed","replace","sketch","texts","document","documentData","layerTextStyles","objects","rawTextStyles","attributes","style","rawTextStyle","String","fontDescriptor","objectForKey","NSFontNameAttribute","NSFontSizeAttribute","paragraph","NSParagraphStyle","maximumLineHeight","NSKern","parseInt","MSAttributedStringTextTransformAttribute","defaultFileName","contents","save","NSSavePanel","savePanel","setNameFieldStringValue","setAllowsOtherFileTypes","setExtensionHidden","runModal","file","NSString","stringWithString","path","URL","writeToFile_atomically_encoding_error","NSUTF8StringEncoding","createHtmlFontbookExportSettingsWindow","cb","cssUnits","alert","NSAlert","init","NSView","alertIconPath","plugin","urlForResourceNamed","alertIcon","NSImage","initByReferencingFile","setIcon","setMessageText","setInformativeText","labelPreviewText","fieldPreviewText","labelMaxDecimalPlaces","fieldMaxDecimalPlaces","labelScalingFactor","fieldScalingFactor","labelCssUnit","selectCssUnit","btnExport","addButtonWithTitle","btnCancel","accessoryView","responseCode","exportOpts","indexOfSelectedItem","parseFloat","stringValue","createSassExportSettingsWindow","mixinNamingConventions","labelMixinNamingPrefix","fieldMixinNamingPrefix","labelMixinNamingConvention","selectMixinNamingConvention","namingConvention","namingPrefix","util"],"mappings":"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","file":"json-export.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/json-export.js\");\n","import uiUtils from './util/ui';\nimport exportUtils from './util/export';\nimport sketchUtils from './util/sketch';\n\nexport default function(context) {\n\n  // Get the text styles from the Sketch document\n  let textStyles = sketchUtils.getTextStyles(context);\n\n  let css = [];\n\n  textStyles.forEach(textStyle => {\n    css.push(exportUtils.createCssProps(textStyle));\n  });\n\n  // Ask the user to save the file\n  uiUtils.createSavePanel('typex-text-styles.json', JSON.stringify(css));\n};","const MARGIN = 10;\n\nconst LABEL_WIDTH = 200;\nconst LABEL_HEIGHT = 22;\n\nconst FIELD_WIDTH = 50;\nconst FIELD_HEIGHT = 22;\n\nconst SELECT_HEIGHT = 28;\nconst SELECT_WIDTH = 200;\n\nlet currentOffset = 0;\n\nconst ui = {\n  createLabel: (view, text) => {\n\n    let frame = NSMakeRect(0, currentOffset, LABEL_WIDTH, LABEL_HEIGHT);\n    let label = NSTextField.alloc().initWithFrame(frame);\n\n    label.setStringValue(text);\n    label.setFont(NSFont.boldSystemFontOfSize(12));\n    label.setBezeled(false);\n    label.setDrawsBackground(false);\n    label.setEditable(false);\n    label.setSelectable(false);\n\n    view.addSubview(label);\n    // currentOffset = currentOffset + LABEL_HEIGHT;\n\n    return label;\n  },\n  createField: (view, value, width = FIELD_WIDTH, height = FIELD_HEIGHT) => {\n\n    let frame = NSMakeRect(LABEL_WIDTH, currentOffset, width, height);\n    let field = NSTextField.alloc().initWithFrame(frame);\n    field.setStringValue(value);\n\n    view.addSubview(field);\n    currentOffset = currentOffset + height + MARGIN;\n\n    return field;\n  },\n  createSelect: (view, options) => {\n\n    let frame = NSMakeRect(LABEL_WIDTH, currentOffset, SELECT_WIDTH, SELECT_HEIGHT);\n    let comboBox = NSComboBox.alloc().initWithFrame(frame);\n\n    comboBox.addItemsWithObjectValues(options);\n    comboBox.selectItemAtIndex(0);\n    comboBox.setNumberOfVisibleItems(16);\n    comboBox.setCompletes(1);\n\n    view.addSubview(comboBox);\n    currentOffset = currentOffset + SELECT_HEIGHT + MARGIN;\n\n    return comboBox;\n  },\n  getCurrentOffset: () => {\n    return currentOffset;\n  }\n};\n\nexport default ui;","\"use strict\";\n\nimport util from './util';\nimport numberUtils from './number';\n\nconst exportUtils = {\n  sortTextStyles(textStyles) {\n\n    // Sort text styles by size\n    textStyles.sort((a, b) => {\n      return a.fontSize - b.fontSize;\n    });\n\n    return textStyles;\n  },\n  createCssProps(textStyle, opts = {}) {\n\n    opts.cssUnit = opts.cssUnit || 'px';\n    opts.scalingFactor = opts.scalingFactor || 1;\n    opts.maxDecimalPlaces = opts.maxDecimalPlaces || 2;\n\n    let cssProps = {};\n\n    cssProps['font-family'] = textStyle.fontFamily;\n    cssProps['font-weight'] = 400;\n    cssProps['line-height'] = 1;\n    cssProps['text-transform'] = 'none';\n\n    let fontParts = textStyle.fontFamily.split('-');\n\n    let fontWeightMap = {\n      'Thin': 100,\n      'Light': 300,\n      'Regular': 400,\n      'Medium': 500,\n      'Bold': 700,\n      'Black': 900\n    };\n\n    if (fontParts[1] && fontWeightMap[fontParts[1]]) {\n      cssProps['font-family'] = fontParts[0];\n      cssProps['font-weight'] = fontWeightMap[fontParts[1]];\n    }\n\n    cssProps['font-size'] = numberUtils.parseFloatMaxDecimal(opts.scalingFactor * textStyle.fontSize, opts.maxDecimalPlaces)+opts.cssUnit;\n    cssProps['letter-spacing'] = numberUtils.parseFloatMaxDecimal(opts.scalingFactor * textStyle.letterSpacing, opts.maxDecimalPlaces)+opts.cssUnit;\n\n    if (textStyle.textTransform === 1) {\n      cssProps['text-transform'] = 'uppercase';\n    }\n\n    if (textStyle.textTransform === 2) {\n      cssProps['text-transform'] = 'lowercase';\n    }\n\n    if (textStyle.lineHeight) {\n      cssProps['line-height'] = numberUtils.parseFloatMaxDecimal(1 + (textStyle.lineHeight - textStyle.fontSize) / textStyle.lineHeight, opts.maxDecimalPlaces);\n    }\n\n    return cssProps;\n  },\n  createInlineStyleString(cssProps) {\n\n    let styleString = '';\n\n    for (let prop in cssProps) {\n      styleString += prop + ': ' + cssProps[prop] +'; ';\n    }\n\n    return styleString;\n  },\n  createHtmlFontbook(textStyles, opts = {}) {\n\n    let exportedTextStyles = {};\n\n    let output = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Typex text styles</title>\n      </head>\n      <body style=\"padding: 0; margin: 0;\">\n    `;\n\n    textStyles.forEach((textStyle, i) => {\n\n      let textStyleId = util.createTextStyleId(textStyle);\n\n      if (! exportedTextStyles[textStyleId]) {\n\n        let cssProps = exportUtils.createCssProps(textStyle, opts);\n        let inlineStyleString = exportUtils.createInlineStyleString(cssProps);\n\n        output += `\n          <div style=\"box-shadow: 0 5px 15px #f0f0f0; padding: 25px 50px; border-bottom: 1px solid #ccc;\">\n            <div style=\"font-family: Helvetica, Arial, Sans-Serif; font-size: 14px; margin-bottom: 15px;\">\n              <span>${i+1}.</span>\n              <span>\n                ${textStyle.name}\n              </span>\n              <span style=\"color: #ccc;\">\n                ${inlineStyleString}\n              </span>\n            </div>\n            <div style=\"${inlineStyleString};\">${opts.previewText}</div>\n          </div>\n        `;\n\n        // Add the id to the stack of text styles we've already exported\n        exportedTextStyles[textStyleId] = true;\n      }\n    });\n\n    output += `\n      </body>\n      </html>\n    `;\n\n    return output;\n  }\n};\n\nexport default exportUtils;","\"use strict\";\n\nconst number = {\n  parseFloatMaxDecimal(number, maxDecimalPlaces) {\n    return Number(number.toFixed(maxDecimalPlaces).replace(/[.,]00$/, ''));\n  }\n};\n\nexport default number;","\"use strict\";\n\nconst sketch = {\n  getTextStyles(context) {\n\n    let texts = context.document.documentData().layerTextStyles().objects();\n    let rawTextStyles = [];\n\n    texts.forEach((text, i) => {\n\n      rawTextStyles.push({\n        attributes: text.style().textStyle().attributes(),\n        textStyle: text,\n        name: text.name()\n      });\n    });\n\n    let textStyles = [];\n\n    rawTextStyles.forEach(rawTextStyle => {\n\n      let textStyle = {};\n\n      textStyle.name = rawTextStyle.name;\n      textStyle.fontFamily = String(rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontNameAttribute));\n      textStyle.fontSize = rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute);\n      textStyle.paragraph = rawTextStyle.attributes.NSParagraphStyle;\n\n      if (textStyle.paragraph) {\n        textStyle.lineHeight = textStyle.paragraph.maximumLineHeight();\n      }\n\n      textStyle.letterSpacing = rawTextStyle.attributes.NSKern || 0;\n      textStyle.textTransform = parseInt(rawTextStyle.attributes.MSAttributedStringTextTransformAttribute || 0);\n\n      // @TODO strikethrough & underline, or is this not needed?\n\n      textStyles.push(textStyle);\n    });\n\n    return textStyles;\n  }\n};\n\nexport default sketch;","\"use strict\";\n\nimport ui from '../ui';\n\nconst uiUtils = {\n  createSavePanel(defaultFileName, contents) {\n\n    let save = NSSavePanel.savePanel();\n\n    save.setNameFieldStringValue(defaultFileName);\n    save.setAllowsOtherFileTypes(false);\n    save.setExtensionHidden(false);\n\n    if (save.runModal()) {\n\n      let file = NSString.stringWithString(contents);\n      let path = save.URL().path();\n\n      file.writeToFile_atomically_encoding_error(path, true, NSUTF8StringEncoding, null);\n    }\n  },\n  createHtmlFontbookExportSettingsWindow(context, cb) { // @TODO create refactored function (look a NSGridView for creating the form)\n\n    let cssUnits = ['px', 'em', 'rem'];\n\n    let alert = NSAlert.alloc().init();\n    let view = NSView.alloc().init();\n\n    let alertIconPath = context.plugin.urlForResourceNamed('icon.png').path();\n    let alertIcon = NSImage.alloc().initByReferencingFile(alertIconPath);\n    alert.setIcon(alertIcon);\n\n    alert.setMessageText('Create HTML fontbook');\n    alert.setInformativeText('Create a handy HTML fontbook from your text styles');\n\n    let labelPreviewText = ui.createLabel(view, 'Preview text');\n    let fieldPreviewText = ui.createField(view, 'The quick brown fox jumps over the lazy dog', 200, 75);\n\n    let labelMaxDecimalPlaces = ui.createLabel(view, 'Maximum decimal places');\n    let fieldMaxDecimalPlaces = ui.createField(view, '2');\n\n    let labelScalingFactor = ui.createLabel(view, 'Scaling factor');\n    let fieldScalingFactor = ui.createField(view, '1');\n\n    let labelCssUnit = ui.createLabel(view, 'CSS unit');\n    let selectCssUnit = ui.createSelect(view, cssUnits);\n\n    let btnExport = alert.addButtonWithTitle('Export');\n    let btnCancel = alert.addButtonWithTitle('Cancel');\n\n    view.frame = NSMakeRect(0, 0, 400, ui.getCurrentOffset());\n    alert.accessoryView = view;\n\n    let responseCode = alert.runModal();\n\n    if (responseCode === 1000) {\n\n      let exportOpts = {\n        cssUnit: cssUnits[selectCssUnit.indexOfSelectedItem()],\n        scalingFactor: parseFloat(fieldScalingFactor.stringValue().replace(',', '.')),\n        maxDecimalPlaces: parseInt(fieldMaxDecimalPlaces.stringValue()),\n        previewText: fieldPreviewText.stringValue()\n      };\n\n      cb(exportOpts);\n    }\n  },\n  createSassExportSettingsWindow(context, cb) { // @TODO create refactored function (look a NSGridView for creating the form)\n\n    let cssUnits = ['px', 'em', 'rem'];\n\n    let mixinNamingConventions = [\n      'Numeric',\n      'Text style name'\n    ];\n\n    let alert = NSAlert.alloc().init();\n    let view = NSView.alloc().init();\n\n    let alertIconPath = context.plugin.urlForResourceNamed('icon.png').path();\n    let alertIcon = NSImage.alloc().initByReferencingFile(alertIconPath);\n    alert.setIcon(alertIcon);\n\n    alert.setMessageText('SASS export');\n    alert.setInformativeText('Export your text styles to SASS mixins');\n\n    let labelMixinNamingPrefix = ui.createLabel(view, 'Naming prefix');\n    let fieldMixinNamingPrefix = ui.createField(view, 'type');\n\n    let labelMixinNamingConvention = ui.createLabel(view, 'Mixin naming convention');\n    let selectMixinNamingConvention = ui.createSelect(view, mixinNamingConventions);\n\n    let labelMaxDecimalPlaces = ui.createLabel(view, 'Maximum decimal places');\n    let fieldMaxDecimalPlaces = ui.createField(view, '2');\n\n    let labelScalingFactor = ui.createLabel(view, 'Scaling factor');\n    let fieldScalingFactor = ui.createField(view, '1');\n\n    let labelCssUnit = ui.createLabel(view, 'CSS unit');\n    let selectCssUnit = ui.createSelect(view, cssUnits);\n\n    let btnExport = alert.addButtonWithTitle('Export');\n    let btnCancel = alert.addButtonWithTitle('Cancel');\n\n    view.frame = NSMakeRect(0, 0, 400, ui.getCurrentOffset());\n    alert.accessoryView = view;\n\n    let responseCode = alert.runModal();\n\n    if (responseCode === 1000) {\n\n      let exportOpts = {\n        cssUnit: cssUnits[selectCssUnit.indexOfSelectedItem()],\n        scalingFactor: parseFloat(fieldScalingFactor.stringValue().replace(',', '.')),\n        maxDecimalPlaces: parseInt(fieldMaxDecimalPlaces.stringValue()),\n        namingConvention: mixinNamingConventions[selectMixinNamingConvention.indexOfSelectedItem()],\n        namingPrefix: fieldMixinNamingPrefix.stringValue(),\n      };\n\n      cb(exportOpts);\n    }\n  }\n};\n\nexport default uiUtils;","\"use strict\";\n\nconst util = {\n  createTextStyleId(textStyle) {\n\n    let textStyleId = '';\n\n    // Make sure this id incorporates every possible property of the text style\n    textStyleId += textStyle.fontFamily;\n    textStyleId += '-'+textStyle.fontSize;\n    textStyleId += '-'+textStyle.lineHeight;\n    textStyleId += '-'+textStyle.letterSpacing;\n    textStyleId += '-'+textStyle.textTransform;\n\n    return textStyleId;\n  }\n};\n\nexport default util;"],"sourceRoot":""}